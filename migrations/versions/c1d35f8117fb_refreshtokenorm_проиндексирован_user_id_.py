"""RefreshTokenOrm: проиндексирован user_id, добавлена строка entry_updated_at; UserOrm: проиндексирован email

Revision ID: c1d35f8117fb
Revises: 48c77d40bf75
Create Date: 2025-09-21 12:51:49.480441

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c1d35f8117fb'
down_revision: Union[str, Sequence[str], None] = '48c77d40bf75'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('refresh_tokens', sa.Column('entry_updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False))
    op.drop_constraint(op.f('refresh_tokens_user_id_key'), 'refresh_tokens', type_='unique')
    op.create_index(op.f('ix_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=True)
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_refresh_tokens_user_id'), table_name='refresh_tokens')
    op.create_unique_constraint(op.f('refresh_tokens_user_id_key'), 'refresh_tokens', ['user_id'], postgresql_nulls_not_distinct=False)
    op.drop_column('refresh_tokens', 'entry_updated_at')
    # ### end Alembic commands ###
