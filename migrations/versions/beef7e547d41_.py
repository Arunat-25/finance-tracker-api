"""empty message

Revision ID: beef7e547d41
Revises: 35600916b8b0
Create Date: 2025-10-01 15:16:23.658593

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'beef7e547d41'
down_revision: Union[str, Sequence[str], None] = '35600916b8b0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('to_account_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('amount > 0', name='chk_amount_transaction_bigger_then_zero'),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_account_id'], ['accounts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    op.add_column('accounts', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('accounts', sa.Column('deleted_at', sa.DateTime(), nullable=False))
    op.alter_column('accounts', 'currency',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_accounts_is_deleted'), 'accounts', ['is_deleted'], unique=False)
    op.add_column('categories', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('categories', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.create_index(op.f('ix_categories_is_deleted'), 'categories', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_users_is_verified'), 'users', ['is_verified'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_is_verified'), table_name='users')
    op.drop_index(op.f('ix_categories_is_deleted'), table_name='categories')
    op.alter_column('categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.drop_column('categories', 'deleted_at')
    op.drop_column('categories', 'is_deleted')
    op.drop_index(op.f('ix_accounts_is_deleted'), table_name='accounts')
    op.alter_column('accounts', 'currency',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('accounts', 'deleted_at')
    op.drop_column('accounts', 'is_deleted')
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_table('transactions')
    # ### end Alembic commands ###
